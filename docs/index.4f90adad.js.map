{"mappings":"SA0GSA,EAAQC,EAAKC,EAAU,GAAIC,GAClC,MAAMC,EAAOC,SAASC,cAAcL,GAUpC,OARIC,EAAQK,QACVH,EAAKI,UAAUC,OAAOP,GAGpBC,IACFC,EAAKM,YAAcP,GAGdC,YArHkBO,EAAUC,EAAU,IAC7C,IAAIC,EAAQ,GAEZ,MAAMC,EAAQT,SAASU,cAAcJ,GACrCG,EAAME,QAAS,EAEXJ,EAAQK,OACVH,EAAMI,aAAa,YAAY,GAG7BN,EAAQO,QAAUC,MAAMC,QAAQT,EAAQO,SAC1CL,EAAMI,aAAa,SAAUN,EAAQO,OAAOG,KAAK,MAGnD,MAAMC,EAAWvB,EAAQ,MAAO,CAAC,gBAC3BwB,EAAaxB,EAAQ,SAAU,CAAC,UAAW,WAC3CyB,EAAezB,EACnB,SACA,CAAC,SAAU,mBACX,aAEFyB,EAAaT,QAAS,EAEtBF,EAAMY,sBAAsB,WAAYH,GACxCT,EAAMY,sBAAsB,WAAYD,GACxCX,EAAMY,sBAAsB,WAAYF,GAiExCA,EAAWG,iBAAiB,SA/DV,IAASb,EAAMc,UAgEjCd,EAAMa,iBAAiB,UA9DAE,IAChBA,EAAMC,OAAOjB,MAAMN,SAExBM,EAAQO,MAAMW,KAAKF,EAAMC,OAAOjB,OAChCU,EAASS,UAAY,GACrBP,EAAaT,QAAS,EAEtBH,EAAMoB,SAASC,IACb,IAAKA,EAAKC,KAAKC,MAAM,SAAU,OAC/B,MAAMC,EAAS,IAAIC,WAEnBD,EAAOE,OAAUC,IACf,MAAMC,EAAMD,EAAGV,OAAOY,OAEtBnB,EAASoB,mBACP,aAAY,uGAIRT,EAAKU,yEAE6BH,WAAaP,EAAKU,sGAEnBV,EAAKU,sEA4C/BC,GACnB,MAAMC,EAAQ,CAAC,QAAS,KAAM,KAAM,KAAM,MAE1C,IAAKD,EAAO,MAAO,SAEnB,MAAME,EAAIC,SAASC,KAAKC,MAAMD,KAAKE,IAAIN,GAASI,KAAKE,IAAI,QAEzD,OAAOF,KAAKG,MAAMP,EAAQI,KAAKI,IAAI,KAAMN,IAAM,IAAMD,EAAMC,GAlDdO,CAAYpB,EAAKqB,qEAO1DlB,EAAOmB,cAActB,UAgCzBX,EAASI,iBAAiB,SA5BHE,IACrB,IAAKA,EAAMC,OAAO2B,QAAQb,KAAM,OAEhC,MAAOA,KAACA,GAASf,EAAMC,OAAO2B,QAC9B5C,EAAQA,EAAM6C,QAAQxB,GAASA,EAAKU,OAASA,IAExC/B,EAAMN,SACTkB,EAAaT,QAAS,GAGxB,MAAM2C,EAAQpC,EACXR,cAAa,eAAgB6B,OAC7BgB,QAAQ,eAEXD,EAAMnD,UAAUC,IAAI,wBAEpB,MAAMoD,EAAQ,KACZF,EAAMG,SACNH,EAAMI,oBAAoB,gBAAiBF,IAG7CF,EAAMhC,iBAAiB,gBAAiBkC,MAQ1CpC,EAAaE,iBAAiB,SALX,SCrFrBqC,CAAW,QAAS,CAClB/C,OAAO,EACPE,OAAQ,CAAC,OAAQ,OAAQ,QAAS","sources":["src/libs/file-upload/index.js","src/index.js"],"sourcesContent":["export function fileUpload(selector, options = {}) {\n  let files = [];\n\n  const input = document.querySelector(selector);\n  input.hidden = true;\n\n  if (options.multi) {\n    input.setAttribute(\"multiple\", true);\n  }\n\n  if (options.accept && Array.isArray(options.accept)) {\n    input.setAttribute(\"accept\", options.accept.join(\",\"));\n  }\n\n  const previews = element(\"div\", [\"fu-previews\"]);\n  const openButton = element(\"button\", [\"fu-btn\"], \"Открыть\");\n  const uploadButton = element(\n    \"button\",\n    [\"fu-btn\", \"fu-btn--primary\"],\n    \"Загрузить\"\n  );\n  uploadButton.hidden = true;\n\n  input.insertAdjacentElement(\"afterend\", previews);\n  input.insertAdjacentElement(\"afterend\", uploadButton);\n  input.insertAdjacentElement(\"afterend\", openButton);\n\n  const triggerInput = () => input.click();\n\n  const changeHandler = (event) => {\n    if (!event.target.files.length) return;\n\n    files = Array.from(event.target.files);\n    previews.innerHTML = \"\";\n    uploadButton.hidden = false;\n\n    files.forEach((file) => {\n      if (!file.type.match(\"image\")) return;\n      const reader = new FileReader();\n\n      reader.onload = (ev) => {\n        const src = ev.target.result;\n\n        previews.insertAdjacentHTML(\n          \"afterbegin\",\n          `\n          <article class=\"fu-preview\">\n            <button class=\"fu-preview__remove\" data-name=\"${\n              file.name\n            }\">&times;</button>\n            <img class=\"fu-preview__img\" src=\"${src}\" alt=\"${file.name}\" />\n            <div class=\"fu-preview__info\">\n              <span class=\"fu-preview__name\">${file.name}</span>\n              <span class=\"fu-preview__size\">${bytesToSize(file.size)}</span>\n            </div>\n          </article>\n        `\n        );\n      };\n\n      reader.readAsDataURL(file);\n    });\n  };\n\n  const removeHandler = (event) => {\n    if (!event.target.dataset.name) return;\n\n    const { name } = event.target.dataset;\n    files = files.filter((file) => file.name !== name);\n\n    if (!files.length) {\n      uploadButton.hidden = true;\n    }\n\n    const block = previews\n      .querySelector(`[data-name=\"${name}\"]`)\n      .closest(\".fu-preview\");\n\n    block.classList.add(\"fu-preview--removing\");\n\n    const removing = () => {\n      block.remove();\n      block.removeEventListener(\"transitionend\", removing);\n    };\n\n    block.addEventListener(\"transitionend\", removing);\n  };\n\n  const uploadHandler = () => {};\n\n  openButton.addEventListener(\"click\", triggerInput);\n  input.addEventListener(\"change\", changeHandler);\n  previews.addEventListener(\"click\", removeHandler);\n  uploadButton.addEventListener(\"click\", uploadHandler);\n}\n\nfunction bytesToSize(bytes) {\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n\n  if (!bytes) return \"0 Byte\";\n\n  const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n\n  return Math.round(bytes / Math.pow(1024, i)) + \" \" + sizes[i];\n}\n\nfunction element(tag, classes = [], content) {\n  const node = document.createElement(tag);\n\n  if (classes.length) {\n    node.classList.add(...classes);\n  }\n\n  if (content) {\n    node.textContent = content;\n  }\n\n  return node;\n}\n","import { fileUpload } from \"./libs/file-upload/index.js\";\nimport \"./libs/file-upload/index.css\";\n\nfileUpload(\"#file\", {\n  multi: true,\n  accept: [\".png\", \".jpg\", \".jpeg\", \".gif\"],\n});\n"],"names":["$a19c5f9a82bba908$var$element","tag","classes","content","node","document","createElement","length","classList","add","textContent","selector","options","files","input","querySelector","hidden","multi","setAttribute","accept","Array","isArray","join","previews","openButton","uploadButton","insertAdjacentElement","addEventListener","click","event","target","from","innerHTML","forEach","file","type","match","reader","FileReader","onload","ev","src","result","insertAdjacentHTML","name","bytes","sizes","i","parseInt","Math","floor","log","round","pow","$a19c5f9a82bba908$var$bytesToSize","size","readAsDataURL","dataset","filter","block","closest","removing","remove","removeEventListener","$a19c5f9a82bba908$export$4a8b657cc4fb4c7f"],"version":3,"file":"index.4f90adad.js.map"}